transferfunction1.m

clc;
clear all;
close all;
display('Controller')  % Display enclosed text
n1=[1 2];
d1=[1 3];
G1=tf(n1,d1)
display('plant')
n2=[1 1];
d2=[1 6 8];
G2=tf(n2,d2)
display('Resultant transfer function')
GS=series(G1,G2) % cascade connection of G1 and G2

output

Controller

G1 =
 
  s + 2
  -----
  s + 3
 
Continuous-time transfer function.

plant

G2 =
 
      s + 1
  -------------
  s^2 + 6 s + 8
 
Continuous-time transfer function.

Resultant transfer function

GS =
 
       s^2 + 3 s + 2
  -----------------------
  s^3 + 9 s^2 + 26 s + 24
 
Continuous-time transfer function.



transferfunction2.m

clc;
clear all;
close all;
n1=1;
d1=[1 1];
display('TF1 is: ') % Display enclosed text
printsys(n1,d1); % display transfer function from polynomials
n2=[1 2];
d2=[0 1];
display('TF2 is: ')
printsys(n2,d2);
n3=[1 0];
d3=[1 0 2];
display('TF3 is: ')
printsys(n3,d3);
n4=[1 0];
d4=[0 1];
display('TF4 is: ')
printsys(n4,d4);
[n5,d5]=parallel(n1,d1,n2,d2);
printsys(n5,d5);
[n6,d6]=feedback(n3,d3,n4,d4);
printsys(n6,d6);
[n7,d7]=series(n5,d5,n6,d6);
display('Overall transfer function is: ')
printsys(n7,d7);
%pole zero map
pzmap(n7,d7);
sgrid;

output:
TF1 is: 
 
num/den = 
 
     1
   -----
   s + 1
TF2 is: 
 
num/den = 
 
   s + 2
   -----
     1
TF3 is: 
 
num/den = 
 
      s
   -------
   s^2 + 2
TF4 is: 
 
num/den = 
 
   s
   -
   1
 
num/den = 
 
   s^2 + 3 s + 3
   -------------
       s + 1
 
num/den = 
 
       s
   ---------
   2 s^2 + 2
Overall transfer function is: 
 
num/den = 
 
      s^3 + 3 s^2 + 3 s
   -----------------------
   2 s^3 + 2 s^2 + 2 s + 2



transferfunction3.m

clc;
clear all;
close all;
n1=[1 2];
d1=[1 3];
display('TF1 is: ') % Display enclosed text
printsys(n1,d1); % display transfer function from polynomials
n2=[1 1];
d2=[1 6 8];
display('TF2 is: ')
printsys(n2,d2);
n3=[1 0];
d3=[1 0 2];
display('TF3 is: ')
printsys(n3,d3);
n4=[1 0];
d4=[0 1];
display('TF4 is: ')
printsys(n4,d4);
[n5,d5]=series(n1,d1,n2,d2);
printsys(n5,d5);
[n6,d6]=feedback(n3,d3,n4,d4);
printsys(n6,d6);
[n7,d7]=series(n5,d5,n6,d6);
display('Overall transfer function is: ')
printsys(n7,d7);
%pole zero map
pzmap(n7,d7);
sgrid;


transferfunction4.m

clc;
clear all;
close all;
n1=[1 2];
d1=[1 3];
disp('TF1 is: ') % Display enclosed text
printsys(n1,d1); % display transfer function from polynomials
n2=[1 1];
d2=[1 6 8];
disp('TF2 is: ')
printsys(n2,d2);
n3=[1 0];
d3=[1 0 2];
disp('TF3 is: ')
printsys(n3,d3);
n4=[1 0];
d4=[0 1];
disp('TF4 is: ')
printsys(n4,d4);
n8=1;
d8=[1 1];
disp('TF5 is: ') % Display enclosed text
printsys(n1,d1); % display transfer function from polynomials
n9=[1 2];
d9=[0 1];
disp('TF6 is: ')
printsys(n2,d2);

[n5,d5]=series(n1,d1,n2,d2);
printsys(n5,d5);
[n6,d6]=feedback(n3,d3,n4,d4);
printsys(n6,d6);
[n7,d7]=series(n5,d5,n6,d6);
[n10,d10]=parallel(n8,d8,n9,d9);
[n11,d11]=series(n7,d7,n10,d10);

disp('Overall transfer function is: ')
printsys(n11,d11);
%pole zero map
pzmap(n11,d11);
sgrid;

transferfunction5.m

clc;
clear all;
close all;
n1=[1 2];
d1=1;
g1=tf(n1,d1)
n2=[1 1 0];
d2=1;
g2=tf(n2,d2)
n3=[1 0 2 1];
d3=1;
g3=tf(n3,d3)
n4=[1 0];
d4=1;
g4=tf(n4,d4)
n5=[1 1 0];
d5=1;
g5=tf(n5,d5)

fb1=feedback(g4,g5);
c1=series(g3,fb1);
fb2=feedback(c1,1);
c2=series(g2,fb2);
fb3=feedback(g1,1);
disp(' Overall tranfer function: ')
c3=series(fb3,c2)

% pole zero map
pzmap(c3);
sgrid;


transferfunction6.m

clc;
clear all;
close all;
n1=[1 1];
d1=1;
g1=tf(n1,d1);
n2=[1 2];
d2=[1 3];
g2=tf(n2,d2);
fb1=feedback(g1,g2);
n3=[1 1];
d3=[1 6 8];
g3=tf(n3,d3);
n4=[1 0];
d4=1;
g4=tf(n4,d4);
s1=series(g3,g4);
s2=series(s1,fb1);
disp('Resultant transfer function is: ')
fb2=feedback(s2,1)
pzmap(fb2);
sgrid;

Resultant transfer function is: 

fb2 =
 
       s^4 + 5 s^3 + 7 s^2 + 3 s
  -----------------------------------
  2 s^4 + 15 s^3 + 44 s^2 + 65 s + 40
 
Continuous-time transfer function.

transferfunction7.m

clc;
clear all;
close all;
n1=10;
d1=[1 1 0];
g1=tf(n1,d1);
n2=[0.5 0];
d2=1;
g2=tf(n2,d2);
fb1=feedback(g1,g2);
n3=[1 2];
d3=1;
g3=tf(n3,d3);
s1=series(g3,fb1);
n4=2;
d4=1;
g4=tf(n4,d4);
n5=1;
d5=[1 2];
g5=tf(n5,d5);
s2=series(g4,g5);
fb2=feedback(s1,1);
s3=parallel(s2,1);
disp(' Resultant transfer function is: ');
res=series(s3,fb2)
pzmap(res);
sgrid;


 Resultant transfer function is: 

res =
 
     10 s^2 + 60 s + 80
  ------------------------
  s^3 + 18 s^2 + 52 s + 40
 
Continuous-time transfer function.
